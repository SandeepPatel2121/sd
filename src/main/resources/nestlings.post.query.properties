#posts
member.get.app.posts=select p.postID, p.postDescription,p.postCreatedDate,p.postTypeId,p.postContentUrl,p.postContentType,p.postUserID,\
  p.postFirstName,p.postLastName,p.postReplyId,p.postReplyUserID,p.postReplyFirstName,p.postReplyLastName,p.comment,p.postReplyCreatedDate,\
  (select coalesce((select cast_to_tinyint(1) from mydesk md where md.contentId=p.postID and md.statusID=1 and md.userID =:userId),cast_to_tinyint(0)) ) as isSaved, \
  sr.role as posterSecurityRole,sr2.role as postReplySecurityRole, upi.profileCroppedImageUrl as posterImageUrl, upi2.profileCroppedImageUrl as postReplyImageUrl \
  from user_posts_vw p \
  join user_security_role usr on usr.userId = p.postUserID \
  join security_role sr on sr.securityRoleId = usr.securityRoleId \
  left join user_security_role usr2 on usr2.userId = p.postReplyUserID \
  left join security_role sr2 on sr2.securityRoleId = usr2.securityRoleId \
  left join user_profile_image upi on upi.userID = p.postUserID \
  and upi.isCurrent = 1 \
  left join user_profile_image upi2 on upi2.userID = p.postReplyUserID \
  and upi2.isCurrent = 1 \
  join user u on u.userID = p.postUserID \
  where p.postUserID = :userId \
  or p.postUserID in (select f.friendUserID from friend f where f.userID = :userId) \
  and p.postStatusID = 1 order by p.postCreatedDate desc

# get a single post
get.post.by.contentId.query= select p.postID, p.postDescription,p.postCreatedDate,p.postTypeId,p.postContentUrl,p.postContentType,p.postUserID,\
  p.postFirstName,p.postLastName,p.postReplyId,p.postReplyUserID,p.postReplyFirstName,p.postReplyLastName,p.comment,p.postReplyCreatedDate,\
sr.role as posterSecurityRole,sr2.role as postReplySecurityRole, upi.profileCroppedImageUrl as posterImageUrl, upi2.profileCroppedImageUrl as postReplyImageUrl \
  from user_posts_vw p \
  join user_security_role usr on usr.userId = p.postUserID \
  join security_role sr on sr.securityRoleId = usr.securityRoleId \
  left join user_security_role usr2 on usr2.userId = p.postReplyUserID \
  left join security_role sr2 on sr2.securityRoleId = usr2.securityRoleId \
  left join user_profile_image upi on upi.userID = p.postUserID \
  and upi.isCurrent = 1 \
  left join user_profile_image upi2 on upi2.userID = p.postReplyUserID \
  and upi2.isCurrent = 1 \
  where p.postID = :contentId 

member.get.classified.posts=select p.postID, p.postDescription,p.postCreatedDate,p.postTypeId,p.postContentUrl,p.postContentType,p.postUserID,\
  p.postFirstName,p.postLastName,p.postReplyId,p.postReplyUserID,p.postReplyFirstName,p.postReplyLastName,p.comment,p.postReplyCreatedDate,\
  (select coalesce((select cast_to_tinyint(1) from mydesk md where md.postID=p.postID and md.userID =:userId),cast_to_tinyint(0)) ) as isSaved  from user_posts_vw p \
  join user u on u.userID = p.postUserID \
  where p.postUserID = :userId \
  or p.postUserID in (select f.friendUserID from friend f where f.userID = :userId) \
  and p.postStatusID = 1 order by p.postCreatedDate desc

member.insert.post.query=insert into post(userID,postTypeID,postDescription,statusID) values (:userId,:postType,:postDescription,1)
member.update.post.query=update post set postDescription = :postDescription where postID = :postId
member.delete.post.query=delete from post where postID = :postId
member.insert.post.reply.query = insert into post_reply(postID,userID, comment,statusID,createdDate) values (:postId,:userId,:comment,1,now())

#member.get.post.reply.by.postreplyid.query=select pr.postID,u.firstName,u.lastName,\
#  pr.comment,pr.createdDate from post_reply pr join user u on pr.userID = u.userID \
#  where pr.postReplyID = :postReplyId and pr.statusID=1

member.get.post.reply.by.postreplyid.query=SELECT pr.postReplyID as postReplyId,pr.userID as userId,pr.postID,u.firstName,u.lastName,upi.profileImageUrl as profileImageUrl, \
pr.comment,pr.createdDate,sr2.role as securityRole \
FROM post_reply pr \
JOIN user u ON pr.userID = u.userID \
left JOIN user_profile_image upi ON pr.userID = upi.userID \
left join user_security_role usr2 on usr2.userId = pr.userId \
left join security_role sr2 on sr2.securityRoleId = usr2.securityRoleId \
where pr.postReplyID = :postReplyId and pr.statusID=1

#member.get.post.reply.by.postid.query=SELECT pr.postID,u.firstName,u.lastName,upi.profileImageUrl as profileImg,\
#  pr.comment,pr.createdDate FROM post_reply pr JOIN USER u ON \
#  pr.userID = u.userID JOIN user_profile_image upi ON pr.userID = upi.userID   \
#  WHERE pr.postID = :postId AND pr.statusID=1

member.get.post.reply.by.postid.query=SELECT pr.postReplyID as postReplyId,pr.userID as userId,pr.postID,u.firstName,u.lastName,upi.profileImageUrl as profileImageUrl, \
pr.comment,pr.createdDate,sr2.role as securityRole \
FROM post_reply pr \
JOIN user u ON pr.userID = u.userID \
left JOIN user_profile_image upi ON pr.userID = upi.userID \
left join user_security_role usr2 on usr2.userId = pr.userId \
left join security_role sr2 on sr2.securityRoleId = usr2.securityRoleId \
WHERE pr.postID = :postId AND pr.statusID=1

#get posted user username by post id
member.get.posted.user.personal.query=select u.userId,u.emailId, u.firstName, u.lastName from user u \
  join post p on p.userID = u.userID \
  where p.postID = :postId


get.post.by.contentId.and.userId.query = select p.postID, p.postDescription,p.postCreatedDate,p.postTypeId,p.postContentUrl,p.postContentType,p.postUserID,\
  p.postFirstName,p.postLastName,p.postReplyId,p.postReplyUserID,p.postReplyFirstName,p.postReplyLastName,p.comment,p.postReplyCreatedDate,\
sr.role as posterSecurityRole,sr2.role as postReplySecurityRole, upi.profileCroppedImageUrl as posterImageUrl, upi2.profileCroppedImageUrl as postReplyImageUrl \
  from user_posts_vw p \
  join user_security_role usr on usr.userId = p.postUserID \
  join security_role sr on sr.securityRoleId = usr.securityRoleId \
  left join user_security_role usr2 on usr2.userId = p.postReplyUserID \
  left join security_role sr2 on sr2.securityRoleId = usr2.securityRoleId \
  left join user_profile_image upi on upi.userID = p.postUserID \
  and upi.isCurrent = 1 \
  left join user_profile_image upi2 on upi2.userID = p.postReplyUserID \
  and upi2.isCurrent = 1 \
  where p.postID = :contentId and p.postUserID=:userId