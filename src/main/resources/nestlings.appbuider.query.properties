get.published.appbuilder.qry=select ab.appBuilderId,ab.builderName,ab.builderData,ab.isDefaultTemplate defaultTemplate,ab.statusId,cab.collegeDetailsId, ab.published \
  from app_builder ab \
  join college_app_builder cab on cab.collegeDetailsId = :collegeDetailsId \
  and cab.appBuilderId = ab.appBuilderId and ab.published=1

get.default.appbuilder.qry=select ab.appBuilderId,ab.builderName,ab.builderData,ab.isDefaultTemplate defaultTemplate,ab.statusId \
  from app_builder ab where ab.statusId=1 and ab.isDefaultTemplate=1

insert.appconfig.qry=insert into app_config (appConfigName,statusId,config,createdDate) values \
  (:appConfigName,:statusId,:config,:createdDate)

insert.collegeappconfig.qry=insert into college_app_config(appConfigId,collegeDetailsId) values \
  (:appConfigId,:collegeDetailsId)

get.appconfigs.for.college.qry=select ac.appConfigId,ac.appConfigName as applicationName,ac.config,ac.statusId,\
  cac.collegeDetailsId from app_config ac \
  join college_app_config cac on cac.collegeDetailsId = :collegeDetailsId \
  and cac.appConfigId = ac.appConfigId

update.appconfig.qry= update app_config set appConfigName = :appConfigName, config=:config, statusId=:statusId \
  where appConfigId=:appConfigId

get.appbuilderfields.qry=select abf.appBuilderFieldsId,abf.fieldsData from app_builder_fields abf

get.default.appbuilder.by.id.qry=select ab.appBuilderId,ab.builderName,ab.builderData,ab.isDefaultTemplate defaultTemplate,ab.statusId \
  from app_builder ab where ab.appBuilderId = :appBuilderId and ab.statusId=1 and ab.isDefaultTemplate=1

get.appbuilder.qry=select ab.appBuilderId,ab.builderName,ab.builderData,ab.isDefaultTemplate defaultTemplate,ab.statusId,cab.collegeDetailsId, ab.published \
  from app_builder ab \
  join college_app_builder cab on ab.appBuilderId = :appBuilderId and cab.collegeDetailsId = :collegeDetailsId \
  and cab.appBuilderId = ab.appBuilderId and ab.statusId=1

get.appbuilder.for.college.qry=select ab.appBuilderId,ab.builderName,ab.builderData,ab.isDefaultTemplate defaultTemplate,ab.statusId,cab.collegeDetailsId \
  from app_builder ab \
  join college_app_builder cab on cab.collegeDetailsId = :collegeDetailsId \
  and cab.appBuilderId = ab.appBuilderId and ab.statusId=1

insert.appbuilder.qry=insert into app_builder (builderName,statusId,builderData,isDefaultTemplate,createdDate, published) values \
  (:builderName,:statusId,:builderData,:defaultTemplate,:createdDate,:published)   

insert.collegeappbuilder.qry=insert into college_app_builder (collegeDetailsId,appBuilderId) values \
  (:collegeDetailsId,:appBuilderId)   

update.appbuilder.qry=update app_builder set builderName = :builderName, statusId=:statusId, builderData=:builderData, updatedDate=:updatedDate, published=:published \
  where appBuilderId=:appBuilderId

delete.appbuilder.qry=delete from app_builder where appBuilderId=:appBuilderId

delete.collegeAppbuilder.qry=delete from college_app_builder where appBuilderId=:appBuilderId

update.application.publish.flag.qry=update app_builder set published = :published where appBuilderId = :appBuilderId

update.college.applications.publish.flag.qry=update app_builder ab \
  join college_app_builder cab on ab.appBuilderId = cab.appBuilderId \
  set ab.published = 0 where cab.collegeDetailsId = :collegeDetailsId