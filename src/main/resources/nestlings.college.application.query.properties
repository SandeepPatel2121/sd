get.college.application.qry=select * from college_application where  collegeDetailsId=:collegeDetailsId and userId=:userId

get.college.application.track.qry = select app.applicationId, \
cd.collegeDetailsId, cd.collegeName,cd.statusID as 'collegeStatusId',app.userId, \
ci.coverImageUrl, app.statusId as applicationStatusId,app.applicationTrackId as 'applicationTrackId', \
app.createdDate, app.updatedDate,app.lastStep,app.totalStep \
from college_application app \
left join college_details cd on app.collegeDetailsId = cd.collegeDetailsID \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
where app.userId = :userId and app.collegeDetailsId=:collegeDetailsId

insert.college.application.qry=insert into college_application (collegeDetailsId, userId, messageThreadId, statusId,applicationData,lastStep,totalStep,createdDate,applicationTrackId) values \
  (:collegeDetailsId,:userId,:messageThreadId,:statusId,:applicationData,:lastStep,:totalStep,:createdDate,:applicationTrackId)

update.college.application.qry=update college_application set applicationData = :applicationData, statusId=:statusId, lastStep=:lastStep,updatedDate=:updatedDate \
  where applicationId=:applicationId

#get my application for mobile
get.my.applications.qry = select app.applicationId, \
cd.collegeDetailsId, cd.collegeName,cd.statusID as 'collegeStatusId', \
ci.coverImageUrl, app.statusId as applicationStatusId,app.applicationTrackId as 'applicationTrackId', \
app.createdDate, app.updatedDate,app.lastStep,app.totalStep \
from college_application app \
left join college_details cd on app.collegeDetailsId = cd.collegeDetailsID \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
where app.userId = :userId order by app.updatedDate, app.createdDate

update.college.application.status.qry=update college_application set statusId=:statusId, updatedDate=:updatedDate \
  where applicationId=:applicationId

delete.college.application.qry=delete from college_application where applicationId=:applicationId and userId=:userId

get.college.application.status.qry = select app.applicationId, app.collegeDetailsId, app.userId, app.statusId,app.createdDate,app.modifyDate,s.status,cd.collegeName as collageName \
                        from college_application app \
                        join college_details cd on cd.collegeDetailsID = app.collegeDetailsId \
                        join status s on s.statusID  = app.statusId where app.statusId in (14,18,19,20)	

update.college.application.date.qry=update college_application set modifyDate= :modifyDate where applicationId=:applicationId

#Get User Submitted Applications
get.user.submitted.applications.qry = select app.applicationId, \
cd.collegeDetailsId, cd.collegeName,cd.statusID as 'collegeStatusId', \
ci.coverImageUrl, app.statusId as applicationStatusId,app.applicationTrackId as 'applicationTrackId', \
app.createdDate, app.updatedDate,app.lastStep,app.totalStep \
from college_application app \
left join college_details cd on app.collegeDetailsId = cd.collegeDetailsID \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
where app.userId = :userId and app.statusId in (14,16,18,19,20) and app.applicationTrackId is not null order by app.updatedDate, app.createdDate 

get.user.submitted.applications.qry.for.cardview = select app.applicationId, \
app.statusId as applicationStatusId,app.applicationTrackId as 'applicationTrackId', \
app.createdDate, app.updatedDate,app.lastStep,app.totalStep, \
cd.collegeDetailsID as collegeId,cd.UNITID as unitid,cd.collegeName, cd.statusID, \
a.streetName,a.city,a.zip,s.stateName as state,s.stateCode,c.countryCode, \
ifnull(ci.coverImageUrl, '/img/univ_reg_off.png') as imageUrl, \
ifnull((SELECT Round(AVG(r.ratings))FROM college_ratings cr JOIN ratings r ON r.ratingsId = cr.ratingsId \
WHERE cr.collegeDetailsId = cd.collegeDetailsID Group By cr.collegeDetailsId),0) as userRating, \
cd.duration as 'duration',cd.intake as 'intake',cd.application_fees as 'applicationFees',(select count(*) from user_save_collage uac where uac.userId=:userId and uac.collegeDetailsId=cd.collegeDetailsId) as 'saved',cd.scholarship, \
((SELECT COUNT(*) from application app where app.entityId = cd.collegeDetailsId) + (SELECT COUNT(*) from college_application collapp where collapp.collegeDetailsId = cd.collegeDetailsId)) AS 'totalApplications' \
from college_application app left join college_details cd on app.collegeDetailsId = cd.collegeDetailsID join address a ON a.addressID = cd.addressID \
LEFT JOIN state s ON s.stateId = a.stateId \
LEFT JOIN country c ON c.countryId = a.countryId \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
where app.userId = :userId and app.statusId in (14,16,18,19,20) and app.applicationTrackId is not null order by app.updatedDate, app.createdDate

get.user.count.submitted.applications.qry=  select count(*) \
from college_application app \
left join college_details cd on app.collegeDetailsId = cd.collegeDetailsID \
LEFT JOIN address a ON a.addressId = cd.addressId \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
where app.userId = :userId and app.statusId in (14,16,18,19,20) and app.applicationTrackId is not null

get.user.inprogress.applications.qry = select app.applicationId, \
cd.collegeDetailsId, cd.collegeName,cd.statusID as 'collegeStatusId', \
ci.coverImageUrl, app.statusId as applicationStatusId,app.applicationTrackId as 'applicationTrackId', \
app.createdDate, app.updatedDate,app.lastStep,app.totalStep \
from college_application app \
left join college_details cd on app.collegeDetailsId = cd.collegeDetailsID \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
where app.userId = :userId and app.statusId in (17) and app.applicationTrackId is not null order by app.updatedDate, app.createdDate

get.user.inprogress.applications.qry.for.cardview = select app.applicationId, \
app.statusId as applicationStatusId,app.applicationTrackId as 'applicationTrackId', \
app.createdDate, app.updatedDate,app.lastStep,app.totalStep, \
cd.collegeDetailsID as collegeId,cd.UNITID as unitid,cd.collegeName, cd.statusID, \
a.streetName,a.city,a.zip,s.stateName as state,s.stateCode,c.countryCode, \
ifnull(ci.coverImageUrl, '/img/univ_reg_off.png') as imageUrl, \
ifnull((SELECT Round(AVG(r.ratings))FROM college_ratings cr JOIN ratings r ON r.ratingsId = cr.ratingsId \
WHERE cr.collegeDetailsId = cd.collegeDetailsID Group By cr.collegeDetailsId),0) as userRating, \
cd.duration as 'duration',cd.intake as 'intake',cd.application_fees as 'applicationFees',(select count(*) from user_save_collage uac where uac.userId=:userId and uac.collegeDetailsId=cd.collegeDetailsId) as 'saved',cd.scholarship, \
((SELECT COUNT(*) from application app where app.entityId = cd.collegeDetailsId) + (SELECT COUNT(*) from college_application collapp where collapp.collegeDetailsId = cd.collegeDetailsId)) AS 'totalApplications' \
from college_application app \
LEFT JOIN college_details cd on app.collegeDetailsId = cd.collegeDetailsID join address a ON a.addressID = cd.addressID \
LEFT JOIN state s ON s.stateId = a.stateId \
LEFT JOIN country c ON c.countryId = a.countryId \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
where app.userId = :userId and app.statusId in (17) and app.applicationTrackId is not null order by app.updatedDate, app.createdDate

get.user.count.inprogress.applications.qry=  select count(*) \
from college_application app \
left join college_details cd on app.collegeDetailsId = cd.collegeDetailsID \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
where app.userId = :userId and app.statusId in (17) and app.applicationTrackId is not null

get.user.offer.received.applications.qry.for.cardview=select app.applicationId, \
app.statusId as applicationStatusId,app.applicationTrackId as 'applicationTrackId', \
app.createdDate, app.updatedDate,app.lastStep,app.totalStep, \
cd.collegeDetailsID as collegeId,cd.UNITID as unitid,cd.collegeName, cd.statusID, \
a.streetName,a.city,a.zip,s.stateName as state,s.stateCode,c.countryCode, \
ifnull(ci.coverImageUrl, '/img/univ_reg_off.png') as imageUrl, \
ifnull((SELECT Round(AVG(r.ratings))FROM college_ratings cr JOIN ratings r ON r.ratingsId = cr.ratingsId \
WHERE cr.collegeDetailsId = cd.collegeDetailsID Group By cr.collegeDetailsId),0) as userRating, \
cd.duration as 'duration',cd.intake as 'intake',cd.application_fees as 'applicationFees',(select count(*) from user_save_collage uac where uac.userId=:userId and uac.collegeDetailsId=cd.collegeDetailsId) as 'saved',cd.scholarship, \
((SELECT COUNT(*) from application app where app.entityId = cd.collegeDetailsId) + (SELECT COUNT(*) from college_application collapp where collapp.collegeDetailsId = cd.collegeDetailsId)) AS 'totalApplications' \
from college_application app \
LEFT JOIN college_details cd on app.collegeDetailsId = cd.collegeDetailsID join address a ON a.addressID = cd.addressID \
LEFT JOIN state s ON s.stateId = a.stateId \
LEFT JOIN country c ON c.countryId = a.countryId \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
where app.userId = :userId and app.statusId in (15) and app.applicationTrackId is not null order by app.updatedDate, app.createdDate

get.user.count.offer.received.applications.qry=select count(*) \
from college_application app \
left join college_details cd on app.collegeDetailsId = cd.collegeDetailsID \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
where app.userId = :userId and app.statusId in (15) and app.applicationTrackId is not null

get.user.offer.accepted.applications.qry.for.cardview=select app.applicationId, \
app.statusId as applicationStatusId,app.applicationTrackId as 'applicationTrackId', \
app.createdDate, app.updatedDate,app.lastStep,app.totalStep, \
cd.collegeDetailsID as collegeId,cd.UNITID as unitid,cd.collegeName, cd.statusID, \
a.streetName,a.city,a.zip,s.stateName as state,s.stateCode,c.countryCode, \
ifnull(ci.coverImageUrl, '/img/univ_reg_off.png') as imageUrl, \
ifnull((SELECT Round(AVG(r.ratings))FROM college_ratings cr JOIN ratings r ON r.ratingsId = cr.ratingsId \
WHERE cr.collegeDetailsId = cd.collegeDetailsID Group By cr.collegeDetailsId),0) as userRating, \
cd.duration as 'duration',cd.intake as 'intake',cd.application_fees as 'applicationFees',(select count(*) from user_save_collage uac where uac.userId=:userId and uac.collegeDetailsId=cd.collegeDetailsId) as 'saved',cd.scholarship, \
((SELECT COUNT(*) from application app where app.entityId = cd.collegeDetailsId) + (SELECT COUNT(*) from college_application collapp where collapp.collegeDetailsId = cd.collegeDetailsId)) AS 'totalApplications' \
from college_application app \
LEFT JOIN college_details cd on app.collegeDetailsId = cd.collegeDetailsID join address a ON a.addressID = cd.addressID \
LEFT JOIN state s ON s.stateId = a.stateId \
LEFT JOIN country c ON c.countryId = a.countryId \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
where app.userId = :userId and app.statusId in (21) and app.applicationTrackId is not null order by app.updatedDate, app.createdDate

get.user.count.offer.accepted.applications.qry=select count(*) \
from college_application app \
left join college_details cd on app.collegeDetailsId = cd.collegeDetailsID \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
where app.userId = :userId and app.statusId in (21) and app.applicationTrackId is not null

get.inprogress.applications,by,university.qry=select app.applicationId, \
app.collegeDetailsId, cd.collegeName,cd.statusID as 'collegeStatusId', \
ci.coverImageUrl,u.firstName,u.lastName,upi.profileImageUrl as 'userProfileImageUrl', app.statusId as applicationStatusId,app.applicationTrackId as 'applicationTrackId', \
app.createdDate, app.updatedDate,app.lastStep,app.totalStep \
from college_application app \
left join college_details cd on app.collegeDetailsId = cd.collegeDetailsID \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
left join user u on app.userId = u.userID \
LEFT JOIN user_profile_image upi on upi.userID = u.userId AND upi.isCurrent=1 \
where app.collegeDetailsId = :collegeDetailsId and app.statusId in (17) and app.applicationTrackId is not null

count.inprogress.applications.by.university.qry=select count(*) \
from college_application app \
left join college_details cd on app.collegeDetailsId = cd.collegeDetailsID \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
left join user u on app.userId = u.userID \
LEFT JOIN user_profile_image upi on upi.userID = u.userId AND upi.isCurrent=1 \
where app.collegeDetailsId = :collegeDetailsId and app.statusId in (17) and app.applicationTrackId is not null

get.submitted.applications,by,university.qry=select app.applicationId, \
app.collegeDetailsId, cd.collegeName,cd.statusID as 'collegeStatusId', \
ci.coverImageUrl,u.firstName,u.lastName,upi.profileImageUrl as 'userProfileImageUrl', app.statusId as applicationStatusId,app.applicationTrackId as 'applicationTrackId', \
app.createdDate, app.updatedDate,app.lastStep,app.totalStep \
from college_application app \
left join college_details cd on app.collegeDetailsId = cd.collegeDetailsID \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
left join user u on app.userId = u.userID \
LEFT JOIN user_profile_image upi on upi.userID = u.userId AND upi.isCurrent=1 \
where app.collegeDetailsId = :collegeDetailsId and app.statusId in (14,16,18,19,20) and app.applicationTrackId is not null

count.submitted.applications.by.university.qry=select count(*) \
from college_application app \
left join college_details cd on app.collegeDetailsId = cd.collegeDetailsID \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
left join user u on app.userId = u.userID \
LEFT JOIN user_profile_image upi on upi.userID = u.userId AND upi.isCurrent=1 \
where app.collegeDetailsId = :collegeDetailsId and app.statusId in (14,16,18,19,20) and app.applicationTrackId is not null

get.offerSent.applications,by,university.qry=select app.applicationId, \
app.collegeDetailsId, cd.collegeName,cd.statusID as 'collegeStatusId', \
ci.coverImageUrl,u.firstName,u.lastName,upi.profileImageUrl as 'userProfileImageUrl', app.statusId as applicationStatusId,app.applicationTrackId as 'applicationTrackId', \
app.createdDate, app.updatedDate,app.lastStep,app.totalStep \
from college_application app \
left join college_details cd on app.collegeDetailsId = cd.collegeDetailsID \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
left join user u on app.userId = u.userID \
LEFT JOIN user_profile_image upi on upi.userID = u.userId AND upi.isCurrent=1 \
where app.collegeDetailsId = :collegeDetailsId and app.statusId in (15,22) and app.applicationTrackId is not null

count.offerSent.applications.by.university.qry=select count(*) \
from college_application app \
left join college_details cd on app.collegeDetailsId = cd.collegeDetailsID \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
left join user u on app.userId = u.userID \
LEFT JOIN user_profile_image upi on upi.userID = u.userId AND upi.isCurrent=1 \
where app.collegeDetailsId = :collegeDetailsId and app.statusId in (15,22) and app.applicationTrackId is not null order by app.updatedDate, app.createdDate

get.offerAccept.applications,by,university.qry=select app.applicationId, \
app.collegeDetailsId, cd.collegeName,cd.statusID as 'collegeStatusId', \
ci.coverImageUrl,u.firstName,u.lastName,upi.profileImageUrl as 'userProfileImageUrl', app.statusId as applicationStatusId,app.applicationTrackId as 'applicationTrackId', \
app.createdDate, app.updatedDate,app.lastStep,app.totalStep \
from college_application app \
left join college_details cd on app.collegeDetailsId = cd.collegeDetailsID \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
left join user u on app.userId = u.userID \
LEFT JOIN user_profile_image upi on upi.userID = u.userId AND upi.isCurrent=1 \
where app.collegeDetailsId = :collegeDetailsId and app.statusId in (21) and app.applicationTrackId is not null

count.offerAccept.applications.by.university.qry=select count(*) \
from college_application app \
left join college_details cd on app.collegeDetailsId = cd.collegeDetailsID \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
left join user u on app.userId = u.userID \
LEFT JOIN user_profile_image upi on upi.userID = u.userId AND upi.isCurrent=1 \
where app.collegeDetailsId = :collegeDetailsId and app.statusId in (21) and app.applicationTrackId is not null

