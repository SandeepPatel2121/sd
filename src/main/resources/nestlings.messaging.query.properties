insert.message.qry=insert into message(contentTypeId,createdBy,content,createdDate,expireDate,statusId)values ((select ct.contentTypeID from content_type ct where ct.tag = :contentTypeTag),:createdBy,:content,:createdDate,:expireDate,1)
insert.message.reply.qry=insert into message_reply(messageId,createdBy,content,createdDate,statusId) values(:messageId,:createdBy,:content,:createdDate,1)
insert.user.message.qry=insert into user_message(userId,messageId,createdDate,statusId) values (:userId,:messageId,:createdDate,1)
insert.user.message.reply.qry=insert into user_message_reply(userId,messageReplyId,createdDate,statusId) values(:userId,:messageReplyId,:createdDate,1)
get.message.details.qry=select um.messageId,null as messageReplyId,ct.contentTypeId, ct.tag as contentTypeTag,m.createdBy,concat(u.firstName,' ',u.lastName) as createdByName ,m.content, \
  m.createdDate,m.updatedDate,m.expireDate, urole.securityRoleId from user_message um \
  join message m on m.messageId = um.messageId \
  join content_type ct on ct.contentTypeID = m.contentTypeId \
  join user u on u.userID = m.createdBy \
  join user_security_role urole on urole.userId = u.userID \
  where um.userId = :userId and um.statusId = 1 \
  union \
  select m2.messageId,null as messageReplyId,ct2.contentTypeId,ct2.tag as contentTypeTag, m2.createdBy,concat(u2.firstName,' ',u2.lastName) as createdByName,m2.content, \
  m2.createdDate,m2.updatedDate,m2.expireDate, urole.securityRoleId from message m2 \
  join content_type ct2 on ct2.contentTypeId = m2.contentTypeId \
  join user u2 on u2.userID = m2.createdBy \
  join user_security_role urole on urole.userId = u2.userID \
  join user_message um2 on um2.messageId = m2.messageId and um2.statusId=1 \
  where m2.createdBy=:userId \
  union \
  select mr.messageId,mr.messageReplyId,ct3.contentTypeId,ct3.tag as contentTypeTag,mr.createdBy,concat(u3.firstName,' ',u3.lastName) as createdByName,mr.content, \
  mr.createdDate,null as updatedDate,m3.expireDate, urole.securityRoleId \
  from message_reply mr \
  join message m3 on m3.messageId = mr.messageId \
  join content_type ct3 on ct3.contentTypeID = m3.contentTypeId \
  join user u3 on u3.userID = mr.createdBy \
  join user_security_role urole on urole.userId = u3.userID \
  join user_message um3 on um3.messageId = mr.messageId and um3.statusId=1 \
  where m3.createdBy = :userId \
  union \
  select mr2.messageId, mr2.messageReplyId,ct4.contentTypeId,ct4.tag as contentTypeTag,mr2.createdBy,concat(u4.firstName,' ',u4.lastName) as createdByName,mr2.content, \
  mr2.createdDate,null as updatedDate,m4.expireDate, urole.securityRoleId \
  from message_reply mr2 \
  join message m4 on m4.messageId = mr2.messageId \
  join content_type ct4 on ct4.contentTypeId = m4.contentTypeId \
  join user_message um4 on um4.messageId = mr2.messageId and um4.statusId=1 \
  and um4.userId=:userId \
  join user u4 on u4.userID = mr2.createdBy \
  join user_security_role urole on urole.userId = u4.userID \
  order by createdDate desc

get.message.recipients.qry= select u.userID,u.firstName,u.lastName,upi.profileImageUrl from user u \
  join user_message um on um.userId = u.userID \
  left join user_profile_image upi on upi.userID = u.userID and upi.isCurrent = 1 \
  where um.messageId = :messageId
update.message.expireDate.qry=update message m set expireDate = :expireDate where messageId=:messageId
remove.message.from.feed.qry=update user_message um set statusId = 2 where userId=:userId and messageId=:messageId

get.message.details.by.id.qry=select um.messageId,null as messageReplyId,ct.contentTypeId, ct.tag as contentTypeTag,m.createdBy,concat(u.firstName,' ',u.lastName) as createdByName ,m.content, \
  m.createdDate,m.updatedDate,m.expireDate, urole.securityRoleId from user_message um \
  join message m on m.messageId = um.messageId \
  join content_type ct on ct.contentTypeID = m.contentTypeId \
  join user u on u.userID = m.createdBy \
  join user_security_role urole on urole.userId = u.userID \
  where um.messageId = :messageId and um.statusId = 1 \
  union \
  select mr.messageId,mr.messageReplyId,ct3.contentTypeId,ct3.tag as contentTypeTag,mr.createdBy,concat(u3.firstName,' ',u3.lastName) as createdByName,mr.content, \
  mr.createdDate,null as updatedDate,m3.expireDate, urole.securityRoleId \
  from message_reply mr \
  join message m3 on m3.messageId = mr.messageId \
  join content_type ct3 on ct3.contentTypeID = m3.contentTypeId \
  join user u3 on u3.userID = mr.createdBy \
  join user_message um3 on um3.messageId = mr.messageId \
  join user_security_role urole on urole.userId = u3.userID \
  where mr.messageId = :messageId and um3.statusId=1

#application track query
insert.application.track.qry=insert into application_track(createdBy,content,createdDate,expireDate,statusId,applicationStatusId) values (:createdBy,:content,:createdDate,:expireDate,1,:applicationStatusId)

insert.application.track.data.qry = insert into application_track_data(trackId,createdBy,content,createdDate,statusId,applicationStatusId) values (:trackId,:createdBy,:content,:createdDate,1,:applicationStatusId)

get.application.track.qry = select content,createdDate,applicationStatusId from application_track where trackId=:trackId

get.application.track.data.qry=((select atr.createdBy,atr.content,atr.message,atr.createdDate,atr.applicationStatusId,null as 'collegeDetailsId' \
from application_track atr \
where trackId=:trackId) \
union \
(select a.createdBy,a.content,a.message,a.createdDate,a.applicationStatusId,ca.collegeDetailsId \
from application_track_data a \
left join college_admin_user ca on a.createdBy=ca.userId \
where trackId=:trackId)) \
order by createdDate
