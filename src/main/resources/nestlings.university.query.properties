#universities
get.college.details.qry=SELECT cd.collegeDetailsId, cd.unitId, cd.collegeName,cd.statusID,a.addressID as 'address.addressId',a.streetName as 'address.streetName',a.city as 'address.city',\
  IFNULL((SELECT s.stateId from state s WHERE s.stateId = a.stateId),a.state) AS 'address.stateId',\
  IFNULL((SELECT s.stateCode from state s WHERE s.stateId = a.stateId),a.state) AS 'address.stateCode',\
  IFNULL((SELECT s.stateName from state s WHERE s.stateId = a.stateId),a.state) AS 'address.state', a.zip as 'address.zip',\
  IFNULL((SELECT c.countryID from country c WHERE c.countryId = a.countryId),a.country) as 'address.countryId',\
  IFNULL((SELECT c.countryCode from country c WHERE c.countryId = a.countryId),a.country) as 'address.countryCode',\
  IFNULL((SELECT c.countryName from country c WHERE c.countryId = a.countryId),a.country) as 'address.country', ac.name AS award,\
  cd.generalPhoneNumber,cd.generalUrl,chc.total as noOfStudents,cd.selectivity,cd.courseCatalogue,cd.religiousAffiliation,\
  cd.costToStudents,cd.specialAffinity,cgr.baGr150 AS pcentCourseComplete,cd.regionalAccreditations,\
  cl.locale as environment,cd.houseAvailable,cd.mealPlan,cd.healthWellnesSupport as healthWellnessSupport,cd.accessibility,\
  cd.accreditingOrganizations as accreditingOrganization,cd.studyOptions, cd.collegeProfileConfig,\
  (SELECT COUNT(*) from college_interest ci WHERE ci.collegeDetailsId = cd.collegeDetailsId AND ci.userId=:userId) AS interested,\
  (SELECT COUNT(*) FROM college_ratings cr WHERE cr.collegeDetailsId=cd.collegeDetailsId ) AS 'collegeRating.totalRatings',\
  (SELECT AVG(r.ratings) FROM college_ratings cr \
  JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId = cd.collegeDetailsId) AS 'collegeRating.totalRatingAverage',\
  (SELECT COUNT(*) FROM college_ratings cr \
  JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
  AND r.ratings < 4) AS 'collegeRating.totalRatedOneToThree', \
  (SELECT COUNT(*) FROM college_ratings cr \
  JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
  AND r.ratings BETWEEN 4 AND 7) AS 'collegeRating.totalRatedFourToSix', \
  (SELECT COUNT(*) FROM college_ratings cr \
  JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
  AND r.ratings > 6) AS 'collegeRating.totalRatedSevenPlus', \
  (SELECT COUNT(*) FROM college_ratings cr \
  JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
  AND r.userType = 1) AS 'collegeRating.totalVisitorRatings', \
  (SELECT AVG(r.ratings) FROM college_ratings cr \
  JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
  AND r.userType = 1) AS 'collegeRating.visitorRatingAverage', \
  (SELECT COUNT(*) FROM college_ratings cr \
  JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
  AND r.userType = 2) AS 'collegeRating.totalAlumniRatings', \
  (SELECT AVG(r.ratings) FROM college_ratings cr \
  JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
  AND r.userType = 2) AS 'collegeRating.alumniRatingAverage',ci.coverImageUrl, \
  ((SELECT COUNT(*) from application app where app.entityId = cd.collegeDetailsId) + (SELECT COUNT(*) from college_application collapp where collapp.collegeDetailsId = cd.collegeDetailsId)) AS 'totalApplications', \
  cyc.inStateTuitionUndGrad as 'yearlyCost.inStateTuitionUndGrad', \
  cyc.inStateFeesUndGrad as 'yearlyCost.inStateFeesUndGrad', \
  cyc.inStateCrdtHrChrgUndGrad as 'yearlyCost.inStateCrdtHrChrgUndGrad', \
  cyc.outOfStateTuitionUndGrad as 'yearlyCost.outOfStateTuitionUndGrad', \
  cyc.outOfStateFeesUndGrad as 'yearlyCost.outOfStateFeesUndGrad', \
  cyc.outOfStateCrdtHrChrgUndGrad as 'yearlyCost.outOfStateCrdtHrChrgUndGrad', \
  cyc.inStateTuitionGrad as 'yearlyCost.inStateTuitionGrad', \
  cyc.inStateFeesGrad as 'yearlyCost.inStateFeesGrad', \
  cyc.inStateCrdtHrChrgGrad as 'yearlyCost.inStateCrdtHrChrgGrad', \
  cyc.outOfStateTuitionGrad as 'yearlyCost.outOfStateTuitionGrad', \
  cyc.outOfStateFeesGrad as 'yearlyCost.outOfStateFeesGrad', \
  cyc.outOfStateCrdtHrChrgGrad as 'yearlyCost.outOfStateCrdtHrChrgGrad', \
  cyc.bookSupplies as 'yearlyCost.bookSupplies', \
  cyc.onCampusRoomBoard as 'yearlyCost.onCampusRoomBoard', \
  cyc.onCampusOtherExp as 'yearlyCost.onCampusOtherExp', \
  cyc.offCampusNoFamilyExp as 'yearlyCost.offCampusNoFamilyExp', \
  cyc.offCampusWithFamilyExp as 'yearlyCost.offCampusWithFamilyExp',\
  (SELECT userId from college_admin_user where collegeDetailsId=:collegeDetailsId) as collegeAdminUserId \
  FROM college_details cd \
  LEFT JOIN address a ON a.addressId = cd.addressId \
  LEFT JOIN unitid_award_category uac ON cd.UNITID = uac.UNITID \
  LEFT JOIN award_category ac ON ac.awardCategoryId = uac.awardCategoryId \
  LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID \
  AND ci.isCurrent=1 \
  LEFT JOIN college_yearly_cost cyc on cyc.collegeDetailsId = cd.collegeDetailsID and cyc.statusId=1 \
  LEFT JOIN college_locale cl on cl.collegeLocaleId = cd.collegeLocaleId \
  LEFT JOIN college_head_count chc on chc.collegeDetailsId = cd.collegeDetailsID \
  and chc.level = 1 \
  LEFT JOIN college_grad_rate cgr on cgr.collegeDetailsId = cd.collegeDetailsID \
  WHERE cd.collegeDetailsId=:collegeDetailsId

get.programs.by.unitid.qry=SELECT DISTINCT ucp.unitid,ucp.cipcode, ucp.majornum, cl.name,\
  (SELECT GROUP_CONCAT(ac.name SEPARATOR ',') FROM award_category ac, unitid_cipcode_program_award ucpa \
  WHERE ucpa.CIPCODE = ucp.CIPCODE AND ucpa.awardCategoryId = ac.awardCategoryId AND ucpa.UNITID=:unitid) AS degreeTypes \
  FROM unitid_cipcode_program ucp \
  JOIN cipcode_lookup cl ON cl.cipcode = ucp.cipcode \
  WHERE ucp.unitid=:unitid

get.college.admin.users.qry=SELECT userId,collegeDetailsId,statusId from college_admin_user where collegeDetailsId=:collegeDetailsId

get.applicants.qry=select app.applicationId, app.userId,u.firstName,u.lastName, upi.profileImageUrl, ud.userStatus as status, \
  ud.hereFor,app.entityId, app.statusId as applicationStatus, \
  app.createdDate, app.updatedDate, app.message as applicantMessage \
  from application app \
  join user u on u.userID = app.userId \
  left join user_profile_image upi on app.userId  = upi.userID and upi.isCurrent = 1 \
  left join user_details ud on app.userId = ud.userID \
  where app.entityId = :entityId order by app.updatedDate, app.createdDate;

#ratings
insert.ratings.qry=insert INTO ratings(userID, userType, ratings,ratingText,createdDate) VALUES (:userId,:userType,:ratings,:ratingsText,now())
insert.college.ratings.qry =  INSERT into college_ratings(ratingsId,collegeDetailsId) VALUES (:ratingsId,:collegeDetailsId)
get.member.university.ratings=SELECT u.userID, u.firstName as userFirstName, u.lastName as userLastName, cr.collegeDetailsId,\
  r.ratings as collegeRating,r.createdDate as ratingDate,r.ratingText,upi.profileImageUrl \
  FROM college_ratings cr JOIN ratings r ON r.ratingsID = cr.ratingsId JOIN user u ON u.userID = r.userID \
  LEFT JOIN user_profile_image upi ON upi.userID = u.userID and upi.isCurrent=1 WHERE cr.collegeDetailsId = :collegeDetailsId;

get.college.ratings.qry=SELECT cd.collegeDetailsId, \
  (SELECT COUNT(*) FROM college_ratings cr WHERE cr.collegeDetailsId=cd.collegeDetailsId ) AS totalRatings, \
  (SELECT AVG(r.ratings) FROM college_ratings cr \
  JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId = cd.collegeDetailsId) AS totalRatingAverage, \
  (SELECT COUNT(*) FROM college_ratings cr \
  JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
  AND r.ratings < 4) AS totalRatedOneToThree, \
  (SELECT COUNT(*) FROM college_ratings cr \
  JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
  AND r.ratings BETWEEN 4 AND 7) AS totalRatedFourToSix, \
  (SELECT COUNT(*) FROM college_ratings cr \
  JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
  AND r.ratings > 6) AS totalRatedSevenPlus, \
  (SELECT COUNT(*) FROM college_ratings cr \
  JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
  AND r.userType = 1) AS totalVisitorRatings, \
  (SELECT AVG(r.ratings) FROM college_ratings cr \
  JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
  AND r.userType = 1) AS visitorRatingAverage, \
  (SELECT COUNT(*) FROM college_ratings cr \
  JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
  AND r.userType = 2) AS totalAlumniRatings, \
  (SELECT AVG(r.ratings) FROM college_ratings cr \
  JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
  AND r.userType = 2) AS alumniRatingAverage \
  from college_details cd where cd.collegeDetailsId in 


#college interest
insert.user.college.interest=insert into college_interest(collegeDetailsId,userId) values (:collegeDetailsId,:userId)
delete.user.college.interest=delete from college_interest where userId=:userId and collegeDetailsId=:collegeDetailsId

#unverified college
get.unverified.college.qry=SELECT collegeDetailsID,collegeName,generalUrl from college_details cd WHERE statusId=3 and collegeDetailsID not in (SELECT entityId FROM website_crawl_log)
insert.valid.email.unverified.college.qry=INSERT INTO unverified_college_valid_email (collegeDetailsId,emailAddress) values (:collegeDetailsId,:emailAddress)
insert.website.crawl.log.qry=INSERT INTO website_crawl_log (entityId,scanDate) values (:entityId,now())
get.valid.emails.for.claim.qry=SELECT collegeDetailsId,emailAddress FROM unverified_college_valid_email WHERE collegeDetailsId = :collegeDetailsId
insert.college.verification.code.qry=insert into college_verification_code (collegeDetailsId,code,createdDate,expireDate,statusId) values (:collegeDetailsId,:code,:createdDate,:expireDate,1)
disable.previous.college.verification.code.qry=update college_verification_code set statusId=2 where collegeDetailsId=:collegeDetailsId
verify.university.code.qry=SELECT collegeDetailsId,code,createdDate,expireDate,statusId from college_verification_code where collegeDetailsId=:collegeDetailsId
university.verified.qry=UPDATE college_details set statusId=4 where collegeDetailsId =:collegeDetailsId
insert.college.admin.user.qry=INSERT INTO college_admin_user (collegeDetailsId,userId,statusId) values (:collegeDetailsId,:userId,:statusId)

#university degrees offered
get.college.degrees.offered.by.unitid.qry=select ac.awardCategoryId,ac.name from unitid_award_category uac \
  JOIN award_category ac on uac.awardCategoryId = ac.awardCategoryId \
  where uac.UNITID=:unitid

#applications
send.college.application.qry = insert into application(userId,entityId,statusId,createdDate,message,dueDate) values \
  (:userId,:entityId,:statusId,now(),:message,:dueDate) 


insert.college.details=insert into college_details(collegeName, generalPhoneNumber, statusId, UNITID) values (:collegeName,:phoneNumber,:statusId,:unitId)

get.college.count.by.name.or.phone=select count(*) from college_details where  LOWER(collegeName)= LOWER(:collegeName) or generalPhoneNumber=:phoneNumber

get.college.details.by.id=select * from college_details where collegeDetailsID=:collegeDetailsId

get.cipcode.lookup=select * from cipcode_lookup order by name;

get.award.categories=select * from award_category;

get.unitid.cip.program.award = delete from unitid_cipcode_program_award where unitid = :unitid and cipcode = :cipcode

delete.unitid.cip.program.award = delete from unitid_cipcode_program_award where unitid = :unitid and cipcode = :cipcode

insert.unitid.cip.program.award = insert into unitid_cipcode_program_award (unitid, cipcode, awardCategoryId) values (:unitid, :cipcode, :awardCategoryId)

get.unitid.cip.program = select * from unitid_cipcode_program where unitid = :unitid and cipcode = :cipcode

get.unitid.cip.program.by.major = select * from unitid_cipcode_program where unitid = :unitid and cipcode = :cipcode and majornum = :majornum

insert.unitid.cip.program = insert into unitid_cipcode_program (unitid, cipcode, majornum) values (:unitid, :cipcode, :majornum)

delete.unitid.cip.program = delete from unitid_cipcode_program where unitid = :unitid and cipcode = :cipcode and majornum = :majornum

update.college.yearly.costs= update college_yearly_cost cyc set  \
    cyc.inStateTuitionUndGrad = :inStateTuitionUndGrad, \
    cyc.inStateFeesUndGrad = :inStateFeesUndGrad , \
    cyc.inStateCrdtHrChrgUndGrad = :inStateCrdtHrChrgUndGrad  ,\
    cyc.outOfStateTuitionUndGrad = :outOfStateTuitionUndGrad  , \
    cyc.outOfStateFeesUndGrad = :outOfStateFeesUndGrad ,\
    cyc.outOfStateCrdtHrChrgUndGrad = :outOfStateCrdtHrChrgUndGrad  ,\
    cyc.inStateTuitionGrad = :inStateTuitionGrad  , \
    cyc.inStateFeesGrad = :inStateFeesGrad  , \
    cyc.inStateCrdtHrChrgGrad = :inStateCrdtHrChrgGrad  ,\
    cyc.outOfStateTuitionGrad = :outOfStateTuitionGrad  , \
    cyc.outOfStateFeesGrad = :outOfStateFeesGrad  , \
    cyc.outOfStateCrdtHrChrgGrad = :outOfStateCrdtHrChrgGrad  ,\
    cyc.bookSupplies = :bookSupplies  , \
    cyc.onCampusRoomBoard = :onCampusRoomBoard  ,\
    cyc.onCampusOtherExp = :onCampusOtherExp  , \
    cyc.offCampusNoFamilyExp = :offCampusNoFamilyExp ,\
    cyc.offCampusWithFamilyExp = :offCampusWithFamilyExp \
  where cyc.collegeDetailsID = :collegeDetailsID and cyc.statusId = 1

delete.unitid.award.categories= delete from unitid_award_category where unitid = :unitid
insert.unitid.award.categories= insert into unitid_award_category (unitid, awardCategoryId) values (:unitid, :awardCategoryId)

#New Queries
#universities
get.college.details.qry.new=SELECT cd.collegeDetailsId, cd.unitId, cd.collegeName,cd.statusID,a.addressID as 'address.addressId',a.streetName as 'address.streetName',a.city as 'address.city',\
  IFNULL((SELECT s.stateId from state s WHERE s.stateId = a.stateId),a.state) AS 'address.stateId',\
  IFNULL((SELECT s.stateCode from state s WHERE s.stateId = a.stateId),a.state) AS 'address.stateCode',\
  IFNULL((SELECT s.stateName from state s WHERE s.stateId = a.stateId),a.state) AS 'address.state', a.zip as 'address.zip',\
  IFNULL((SELECT c.countryID from country c WHERE c.countryId = a.countryId),a.country) as 'address.countryId',\
  IFNULL((SELECT c.countryCode from country c WHERE c.countryId = a.countryId),a.country) as 'address.countryCode',\
  IFNULL((SELECT c.countryName from country c WHERE c.countryId = a.countryId),a.country) as 'address.country', ac.name AS award,\
  cd.generalPhoneNumber,cd.generalUrl,chc.total as noOfStudents,cd.selectivity,cd.courseCatalogue,cd.religiousAffiliation,\
  cd.costToStudents,cd.specialAffinity,cgr.baGr150 AS pcentCourseComplete,cd.regionalAccreditations,\
  cl.locale as environment,cd.houseAvailable,cd.mealPlan,cd.healthWellnesSupport as healthWellnessSupport,cd.accessibility,\
  cd.accreditingOrganizations as accreditingOrganization,cd.studyOptions, cd.collegeProfileConfig,\
  (SELECT COUNT(*) from college_interest ci WHERE ci.collegeDetailsId = cd.collegeDetailsId AND ci.userId=:userId) AS interested,\
  ci.coverImageUrl,cd.scholarship,\
  (select attachment.url from attachments attachment where attachment.collegeDetailsId=cd.collegeDetailsId limit 1 offset 0) as profileImageUrl, \
  ((SELECT COUNT(*) from application app where app.entityId = cd.collegeDetailsId) + (SELECT COUNT(*) from college_application collapp where collapp.collegeDetailsId = cd.collegeDetailsId)) AS 'totalApplications', \
  cyc.inStateTuitionUndGrad as 'yearlyCost.inStateTuitionUndGrad', \
  cyc.inStateFeesUndGrad as 'yearlyCost.inStateFeesUndGrad', \
  cyc.inStateCrdtHrChrgUndGrad as 'yearlyCost.inStateCrdtHrChrgUndGrad', \
  cyc.outOfStateTuitionUndGrad as 'yearlyCost.outOfStateTuitionUndGrad', \
  cyc.outOfStateFeesUndGrad as 'yearlyCost.outOfStateFeesUndGrad', \
  cyc.outOfStateCrdtHrChrgUndGrad as 'yearlyCost.outOfStateCrdtHrChrgUndGrad', \
  cyc.inStateTuitionGrad as 'yearlyCost.inStateTuitionGrad', \
  cyc.inStateFeesGrad as 'yearlyCost.inStateFeesGrad', \
  cyc.inStateCrdtHrChrgGrad as 'yearlyCost.inStateCrdtHrChrgGrad', \
  cyc.outOfStateTuitionGrad as 'yearlyCost.outOfStateTuitionGrad', \
  cyc.outOfStateFeesGrad as 'yearlyCost.outOfStateFeesGrad', \
  cyc.outOfStateCrdtHrChrgGrad as 'yearlyCost.outOfStateCrdtHrChrgGrad', \
  cyc.bookSupplies as 'yearlyCost.bookSupplies', \
  cyc.onCampusRoomBoard as 'yearlyCost.onCampusRoomBoard', \
  cyc.onCampusOtherExp as 'yearlyCost.onCampusOtherExp', \
  cyc.offCampusNoFamilyExp as 'yearlyCost.offCampusNoFamilyExp', \
  cyc.offCampusWithFamilyExp as 'yearlyCost.offCampusWithFamilyExp',\
  a.longitude as 'longitude',a.latitude as latitude,cd.description as 'description',cd.duration as 'duration',cd.intake as 'intake',  \
  (SELECT userId from college_admin_user where collegeDetailsId=:collegeDetailsId) as collegeAdminUserId,cd.application_fees as 'applicationFees', \
  (select count(*) from user_save_collage uac where uac.userId=:userId and uac.collegeDetailsId=cd.collegeDetailsId) as 'saved', \
  round((select count(*) from college_application ca2 where ca2.collegeDetailsId=:collegeDetailsId and statusId=15)*100/(select count(*) from college_application ca1 where ca1.collegeDetailsId=:collegeDetailsId)) as 'acceptanceRate' \
  FROM college_details cd \
  LEFT JOIN address a ON a.addressId = cd.addressId \
  LEFT JOIN unitid_award_category uac ON cd.UNITID = uac.UNITID \
  LEFT JOIN award_category ac ON ac.awardCategoryId = uac.awardCategoryId \
  LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID \
  AND ci.isCurrent=1 \
  LEFT JOIN college_yearly_cost cyc on cyc.collegeDetailsId = cd.collegeDetailsID and cyc.statusId=1 \
  LEFT JOIN college_locale cl on cl.collegeLocaleId = cd.collegeLocaleId \
  LEFT JOIN college_head_count chc on chc.collegeDetailsId = cd.collegeDetailsID \
  and chc.level = 1 \
  LEFT JOIN college_grad_rate cgr on cgr.collegeDetailsId = cd.collegeDetailsID \
  WHERE cd.collegeDetailsId=:collegeDetailsId

#get.programs.by.unitid.qry.new=SELECT DISTINCT ucp.unitid,ucp.cipcode, ucp.majornum, cl.name,\
#  (SELECT GROUP_CONCAT(ac.name SEPARATOR ',') FROM award_category ac, unitid_cipcode_program_award ucpa \
#  WHERE ucpa.CIPCODE = ucp.CIPCODE AND ucpa.awardCategoryId = ac.awardCategoryId AND ucpa.UNITID=:unitid) AS degreeTypes,ucp.fees \
#  FROM unitid_cipcode_program ucp \
#  JOIN cipcode_lookup cl ON cl.cipcode = ucp.cipcode \
#  WHERE ucp.unitid=:unitid

get.programs.by.unitid.qry.with.degreeTypes = SELECT DISTINCT ucp.unitid,ucp.cipcode, ucp.majornum, cl.name as 'programName', \
(SELECT GROUP_CONCAT(ac.name SEPARATOR ',') FROM award_category ac, unitid_cipcode_program_award ucpa \
WHERE ucpa.CIPCODE = ucp.CIPCODE AND ucpa.awardCategoryId = ac.awardCategoryId AND ucpa.UNITID=ucp.UNITID) AS degreeTypes \
FROM unitid_cipcode_program ucp \
JOIN cipcode_lookup cl ON cl.cipcode = ucp.cipcode \
WHERE ucp.unitid=:unitid

get.programs.by.unitid.count.qry.with.degreeTypes= SELECT count(Distinct ucp.unitid,ucp.cipcode,ucp.majornum,cl.name) \
  FROM unitid_cipcode_program ucp \
  JOIN cipcode_lookup cl ON cl.cipcode = ucp.cipcode \
  WHERE ucp.unitid=:unitid

get.programs.by.unitid.count.qry.new=SELECT count(Distinct ucp.unitid,ucp.cipcode,ucp.majornum,cl.name) \
  FROM unitid_cipcode_program ucp \
  JOIN cipcode_lookup cl ON cl.cipcode = ucp.cipcode \
  WHERE ucp.unitid=:unitid

get.programs.by.unitid.count.qry.new2=SELECT count(Distinct ucp.unitid,ucp.cipcode,ucp.majornum,cl.name) \
  FROM unitid_cipcode_program ucp \
  JOIN cipcode_lookup cl ON cl.cipcode = ucp.cipcode \
  JOIN unitid_cipcode_program_award ucpa on ucpa.CIPCODE = ucp.cipcode and ucpa.UNITID=ucp.unitid \
  JOIN award_category ac on ucpa.awardCategoryId=ac.awardCategoryId \
  WHERE ucp.unitid=:unitid

get.programs.by.unitid.qry.new=SELECT DISTINCT ucp.unitid,ucp.cipcode, ucp.majornum,\
cl.name as 'programName' FROM unitid_cipcode_program ucp \
JOIN cipcode_lookup cl ON cl.cipcode = ucp.cipcode \
WHERE ucp.unitid=:unitid

get.programs.by.unitid.qry.new2=SELECT Distinct ucp.unitid,ucp.cipcode,ucp.majornum,cl.name as 'programName' \
FROM unitid_cipcode_program ucp \
JOIN cipcode_lookup cl ON cl.cipcode = ucp.cipcode \
JOIN unitid_cipcode_program_award ucpa on ucpa.CIPCODE = ucp.cipcode and ucpa.UNITID=ucp.unitid \
JOIN award_category ac on ucpa.awardCategoryId=ac.awardCategoryId \
WHERE ucp.UNITID=:unitid 

get.programs.subtype.qry=select (SELECT ac.name FROM award_category ac \
where ac.awardCategoryId=ucpa.awardCategoryId) as degreeType, \
ucpa.awardCategoryId as degreeId, \
ucpa.second_language as secondLanguage, \
ucpa.fees as fees \
FROM unitid_cipcode_program_award ucpa \
WHERE ucpa.CIPCODE = :cipcode \
AND ucpa.UNITID=:unitid

get.programs.subtype.qry.new=select (SELECT ac.name FROM award_category ac \
where ac.awardCategoryId=ucpa.awardCategoryId) as degreeType, \
ucpa.awardCategoryId as degreeId, \
ucpa.second_language as secondLanguage, \
ucpa.fees as fees \
FROM unitid_cipcode_program_award ucpa \
JOIN award_category ac on ucpa.awardCategoryId=ac.awardCategoryId \
WHERE ucpa.CIPCODE = :cipcode \
AND ucpa.UNITID=:unitid 

get.programs.dates.qry = select date from programs_start_dates where UNITID=:unitid and cipcode=:cipcode and awardCategoryId=:awardCategoryId

#get.programs.languages.qry = select languageId,language from programs_languages where UNITID=:unitid and cipcode=:cipcode

get.member.university.ratings.new=SELECT u.userID, u.firstName as userFirstName, u.lastName as userLastName, cr.collegeDetailsId,\
  r.ratings as collegeRating,r.createdDate as ratingDate,r.ratingText,upi.profileImageUrl \
  FROM college_ratings cr JOIN ratings r ON r.ratingsID = cr.ratingsId JOIN user u ON u.userID = r.userID \
  LEFT JOIN user_profile_image upi ON upi.userID = u.userID and upi.isCurrent=1 WHERE cr.collegeDetailsId = :collegeDetailsId

get.member.university.ratings.count.new=SELECT count(*) \
  FROM college_ratings cr JOIN ratings r ON r.ratingsID = cr.ratingsId JOIN user u ON u.userID = r.userID \
  LEFT JOIN user_profile_image upi ON upi.userID = u.userID and upi.isCurrent=1 WHERE cr.collegeDetailsId = :collegeDetailsId

get.university.ratings.details.new=select cd.collegeDetailsId AS 'collegeDetailsId',(SELECT COUNT(*) FROM college_ratings cr WHERE cr.collegeDetailsId=cd.collegeDetailsId ) AS 'totalRatings', \
(SELECT AVG(r.ratings) FROM college_ratings cr  \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId = cd.collegeDetailsId) AS 'totalRatingAverage', \
(SELECT COUNT(*) FROM college_ratings cr  \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.ratings < 4) AS 'totalRatedOneToThree', \
(SELECT COUNT(*) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.ratings BETWEEN 4 AND 7) AS 'totalRatedFourToSix', \
(SELECT COUNT(*) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.ratings > 6) AS 'totalRatedSevenPlus', \
(SELECT COUNT(*) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.userType = 1) AS 'totalVisitorRatings', \
(SELECT AVG(r.ratings) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.userType = 1) AS 'visitorRatingAverage', \
(SELECT COUNT(*) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.userType = 2) AS 'totalAlumniRatings', \
(SELECT AVG(r.ratings) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.userType = 2) AS 'alumniRatingAverage' \
from college_details cd \
where cd.collegeDetailsId=:collegeDetailsId

get.university.ratings.details.new.fivestar=select cd.collegeDetailsId AS 'collegeDetailsId', \
(SELECT COUNT(*) FROM college_ratings cr WHERE cr.collegeDetailsId=cd.collegeDetailsId ) AS 'totalRatings', \
(ifnull((SELECT AVG(r.ratings) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId = cd.collegeDetailsId),0.0)) AS 'totalRatingAverage', \
(SELECT COUNT(*) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.ratings < 4) AS 'totalRatedOneToThree', \
(SELECT COUNT(*) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.ratings BETWEEN 4 AND 7) AS 'totalRatedFourToSix', \
(SELECT COUNT(*) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.ratings > 6) AS 'totalRatedSevenPlus', \
(SELECT COUNT(*) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.ratings > 0 and r.ratings<=2) AS 'totalRatedOneStar', \
(SELECT COUNT(*) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.ratings > 2 and  r.ratings<=4) AS 'totalRatedTwoStar', \
(SELECT COUNT(*) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.ratings > 4 and r.ratings<=6) AS 'totalRatedThreeStar', \
(SELECT COUNT(*) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.ratings > 6 and r.ratings<=8) AS 'totalRatedFourStar', \
(SELECT COUNT(*) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.ratings > 8 and r.ratings<=10) AS 'totalRatedFiveStar', \
(SELECT COUNT(*) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.userType = 1) AS 'totalVisitorRatings', \
(ifnull((SELECT AVG(r.ratings) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.userType = 1),0.0)) AS 'visitorRatingAverage', \
(SELECT COUNT(*) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.userType = 2) AS 'totalAlumniRatings', \
(ifnull((SELECT AVG(r.ratings) FROM college_ratings cr \
JOIN ratings r ON r.ratingsId = cr.ratingsId WHERE cr.collegeDetailsId=cd.collegeDetailsId \
AND r.userType = 2),0.0)) AS 'alumniRatingAverage' \
from college_details cd \
where cd.collegeDetailsId=:collegeDetailsId

get.university.member.interest.new=SELECT COUNT(*) As 'interest' \
  from college_interest ci WHERE ci.collegeDetailsId = :collegeDetailsId AND ci.userId= :userId

#college interest
insert.user.college.interest.new=insert into college_interest(collegeDetailsId,userId) values (:collegeDetailsId,:userId)
delete.user.college.interest.new=delete from college_interest where userId=:userId and collegeDetailsId=:collegeDetailsId

#ratings
insert.ratings.qry.new=insert INTO ratings(userID, userType, ratings,ratingText,createdDate) VALUES (:userId,:userType,:ratings,:ratingsText,now())
insert.college.ratings.qry.new =  INSERT into college_ratings(ratingsId,collegeDetailsId) VALUES (:ratingsId,:collegeDetailsId)

get.college.admin.users.qry.new=SELECT userId,collegeDetailsId,statusId from college_admin_user where collegeDetailsId=:collegeDetailsId

#applications
send.college.application.qry.new = insert into application(userId,entityId,statusId,createdDate,message,dueDate) values \
  (:userId,:entityId,:statusId,now(),:message,:dueDate)

get.member.course.qry.new= SELECT courseID, course AS courseName, issuedBy, date AS courseDate FROM course WHERE userID =:userId

#act scores
get.member.actscores.qry.new=SELECT testScoreID,testDate,english,math,science,reading,composite FROM testscore WHERE userID=:userId AND testType=2

#sat scores
get.member.satscores.qry.new=SELECT testScoreId,testDate,math,writing,reading,composite FROM testscore WHERE userID=:userId AND testType=3

#member work
get.member.work.qry.new=SELECT uw.userWorkId as memberWorkId, c.companyId,c.companyName,uw.title,uw.description,uw.startDate,uw.endDate,\
  a.addressId as 'address.addressId',a.streetName as 'address.streetName',a.city as 'address.city',\
  IFNULL( (SELECT s.stateName FROM state s WHERE s.stateId = a.stateId),a.state) AS 'address.state',\
  IFNULL((SELECT s.stateId from state s WHERE s.stateId = a.stateId),null) AS 'address.stateID',a.zip as 'address.zip',\
  IFNULL((SELECT c.countryName from country c WHERE c.countryId = a.countryId),a.country) AS 'address.country',\
  IFNULL((SELECT c.countryId from country c WHERE c.countryId = a.countryId),null) AS 'address.countryId' from user_work uw \
  JOIN company c ON c.companyId = uw.companyId \
  JOIN address a ON a.addressId = c.addressId \
  WHERE uw.userId = :userId

# member training
get.member.training.qry.new = SELECT ut.userTrainingId as memberTrainingId,c.companyId,c.companyName,ut.course as trainingCourse,ut.startDate,ut.endDate, \
  ut.addressId, a.addressId AS 'address.addressId', a2.streetName AS 'trainingAddress.streetName', a.streetName AS 'address.streetName', \
  a2.city AS 'trainingAddress.city',a.city AS 'address.city',\
  IFNULL ( (SELECT s.stateName FROM state s WHERE s.stateId = a2.stateId),a2.state) AS 'trainingAddress.state',\
  IFNULL ( (SELECT s.stateName FROM state s WHERE s.stateId = a.stateId),a.state) AS 'address.state',\
  IFNULL((SELECT s.stateId from state s WHERE s.stateId = a2.stateId),null) AS 'trainingAddress.stateId',\
  IFNULL((SELECT s.stateId from state s WHERE s.stateId = a.stateId),null) AS 'address.stateId',\
  a2.zip AS 'trainingAddress.zip',a.zip AS 'address.zip',\
  IFNULL((SELECT c.countryName from country c WHERE c.countryId = a2.countryId),a2.country) AS 'trainingAddress.country',\
  IFNULL((SELECT c.countryName from country c WHERE c.countryId = a.countryId),a.country) AS 'address.country',\
  IFNULL((SELECT c.countryId from country c WHERE c.countryId = a2.countryId),null) AS 'trainingAddress.countryId',\
  IFNULL((SELECT c.countryId from country c WHERE c.countryId = a.countryId),null) AS 'address.countryId' \
  FROM user_training ut \
  JOIN company c ON c.companyId = ut.companyId \
  LEFT JOIN address a ON a.addressId = c.addressId \
  LEFT JOIN address a2 ON a2.addressId = ut.addressId \
  WHERE ut.userId = :userId

get.suggested.university.new=SELECT DISTINCT cd.collegeDetailsID as collegeId,cd.UNITID as unitid,cd.collegeName, cd.statusID,  a.streetName, \
a.city,a.zip,s.stateName as state,s.stateCode,c.countryCode, \
ifnull(ci.coverImageUrl, '/img/univ_reg_off.png') as imageUrl, \
ifnull((SELECT Round(AVG(r.ratings)) FROM college_ratings cr JOIN ratings r \
ON r.ratingsId = cr.ratingsId \
WHERE cr.collegeDetailsId = cd.collegeDetailsID \
Group By cr.collegeDetailsId),0) as userRating, \
(select count(*) from college_application ca where ca.collegeDetailsId=cd.collegeDetailsId) as totalApplications,cd.duration as 'duration',cd.intake as 'intake',cd.application_fees as 'applicationFees', \
(select count(*) from user_save_collage uac where uac.userId=:userId and uac.collegeDetailsId=cd.collegeDetailsId) as 'saved',cd.scholarship, \
((SELECT COUNT(*) from application app where app.entityId = cd.collegeDetailsId) + (SELECT COUNT(*) from college_application collapp where collapp.collegeDetailsId = cd.collegeDetailsId)) AS 'totalApplications',cd.collegeRecommended as 'collegeRecommended'\
FROM college_details cd \
join address a ON a.addressID = cd.addressID \
LEFT JOIN state s ON s.stateId = a.stateId \
LEFT JOIN country c ON c.countryId = a.countryId \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
WHERE cd.collegeRecommended=1 \
order by totalApplications desc \
limit 20 offset 0

insert.university.attachment.qry.new = insert into attachments(url,contentType,contentLength,fileName,collegeDetailsId,createdBy,createdAt,updatedBy,updatedAt,isActive) \
  values (:url,:contentType,:contentLength,:fileName,:collegeDetailsId,:userId,now(),:userId,now(),1)

get.university.attachments.qry.new = select attachmentId,url,contentType,contentLength,fileName,collegeDetailsId from attachments \
  where collegeDetailsId = :collegeDetailsId and isActive=1

insert.user.university.qry = insert into user_save_collage(userId,collegeDetailsId,createDate) values (:userId,:collegeDetailsId,now())

delete.user.university.qry = delete from user_save_collage where collegeDetailsId=:collegeDetailsId and userId = :userId

get.saved.college.qry = SELECT DISTINCT cd.collegeDetailsID as collegeId,cd.UNITID as unitid,cd.collegeName, cd.statusID, \
a.streetName,a.city,a.zip,s.stateName as state,s.stateCode,c.countryCode, \
ifnull(ci.coverImageUrl, '/img/univ_reg_off.png') as imageUrl, \
ifnull((SELECT Round(AVG(r.ratings))FROM college_ratings cr JOIN ratings r ON r.ratingsId = cr.ratingsId \
WHERE cr.collegeDetailsId = cd.collegeDetailsID Group By cr.collegeDetailsId),0) as userRating, \
cd.duration as 'duration',cd.intake as 'intake',cd.application_fees as 'applicationFees',1 as 'saved',cd.scholarship, \
((SELECT COUNT(*) from application app where app.entityId = cd.collegeDetailsId) + (SELECT COUNT(*) from college_application collapp where collapp.collegeDetailsId = cd.collegeDetailsId)) AS 'totalApplications' \
FROM college_details cd join address a ON a.addressID = cd.addressID \
LEFT JOIN state s ON s.stateId = a.stateId \
LEFT JOIN country c ON c.countryId = a.countryId \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
where  cd.collegeDetailsID in (select usc.collegeDetailsID from user_save_collage usc where usc.userId=:userId)

#after country left join
#JOIN unitid_cipcode_program_award ucpa ON ucpa.UNITID = cd.UNITID


count.of.saved.college.qry = SELECT COUNT(Distinct cd.collegeDetailsID) \
FROM college_details cd join address a ON a.addressID = cd.addressID \
LEFT JOIN state s ON s.stateId = a.stateId \
LEFT JOIN country c ON c.countryId = a.countryId \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
where  cd.collegeDetailsID in (select usc.collegeDetailsID from user_save_collage usc where usc.userId=:userId)

get.shortlisted.university.new=SELECT DISTINCT cd.collegeDetailsID as collegeId,cd.UNITID as unitid,cd.collegeName, cd.statusID,  a.streetName, \
a.city,a.zip,s.stateName as state,s.stateCode,c.countryCode, \
ifnull(ci.coverImageUrl, '/img/univ_reg_off.png') as imageUrl, \
ifnull((SELECT Round(AVG(r.ratings)) FROM college_ratings cr JOIN ratings r \
ON r.ratingsId = cr.ratingsId \
WHERE cr.collegeDetailsId = cd.collegeDetailsID \
Group By cr.collegeDetailsId),0) as userRating, \
(select count(*) from college_application ca where ca.collegeDetailsId=cd.collegeDetailsId) as totalApplications,cd.duration as 'duration',cd.intake as 'intake',cd.application_fees as 'applicationFees', \
(select count(*) from user_save_collage uac where uac.userId=:userId and uac.collegeDetailsId=cd.collegeDetailsId) as 'saved',cd.scholarship, \
((SELECT COUNT(*) from application app where app.entityId = cd.collegeDetailsId) + (SELECT COUNT(*) from college_application collapp where collapp.collegeDetailsId = cd.collegeDetailsId)) AS 'totalApplications',cd.collegeRecommended as 'collegeRecommended'\
FROM college_details cd \
join address a ON a.addressID = cd.addressID \
LEFT JOIN state s ON s.stateId = a.stateId \
LEFT JOIN country c ON c.countryId = a.countryId \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1

count.of.shortlisted.university.new=SELECT COUNT(Distinct cd.collegeDetailsID) \
FROM college_details cd \
join address a ON a.addressID = cd.addressID \
LEFT JOIN state s ON s.stateId = a.stateId \
LEFT JOIN country c ON c.countryId = a.countryId \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1

get.suggested.university.with.pagination=SELECT DISTINCT cd.collegeDetailsID as collegeId,cd.UNITID as unitid,cd.collegeName, cd.statusID,  a.streetName, \
a.city,a.zip,s.stateName as state,s.stateCode,c.countryCode, \
ifnull(ci.coverImageUrl, '/img/univ_reg_off.png') as imageUrl, \
ifnull((SELECT Round(AVG(r.ratings)) FROM college_ratings cr JOIN ratings r \
ON r.ratingsId = cr.ratingsId \
WHERE cr.collegeDetailsId = cd.collegeDetailsID \
Group By cr.collegeDetailsId),0) as userRating, \
(select count(*) from college_application ca where ca.collegeDetailsId=cd.collegeDetailsId) as totalApplications,cd.duration as 'duration',cd.intake as 'intake',cd.application_fees as 'applicationFees', \
(select count(*) from user_save_collage uac where uac.userId=:userId and uac.collegeDetailsId=cd.collegeDetailsId) as 'saved', cd.scholarship,\
((SELECT COUNT(*) from application app where app.entityId = cd.collegeDetailsId) + (SELECT COUNT(*) from college_application collapp where collapp.collegeDetailsId = cd.collegeDetailsId)) AS 'totalApplications',cd.collegeRecommended as 'collegeRecommended'\
FROM college_details cd \
join address a ON a.addressID = cd.addressID \
LEFT JOIN state s ON s.stateId = a.stateId \
LEFT JOIN country c ON c.countryId = a.countryId \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
WHERE cd.collegeRecommended=1

#order by totalApplications desc

count.of.suggested.university.with.pagination = SELECT COUNT(Distinct cd.collegeDetailsID) \
FROM college_details cd \
join address a ON a.addressID = cd.addressID \
LEFT JOIN state s ON s.stateId = a.stateId \
LEFT JOIN country c ON c.countryId = a.countryId \
LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
WHERE cd.collegeRecommended=1

get.college.details.for.university.qry=SELECT cd.collegeDetailsId, cd.unitId, cd.collegeName,cd.statusID,a.addressID as 'address.addressId',a.streetName as 'address.streetName',a.city as 'address.city',\
  IFNULL((SELECT s.stateId from state s WHERE s.stateId = a.stateId),a.state) AS 'address.stateId',\
  IFNULL((SELECT s.stateCode from state s WHERE s.stateId = a.stateId),a.state) AS 'address.stateCode',\
  IFNULL((SELECT s.stateName from state s WHERE s.stateId = a.stateId),a.state) AS 'address.state', a.zip as 'address.zip',\
  IFNULL((SELECT c.countryID from country c WHERE c.countryId = a.countryId),a.country) as 'address.countryId',\
  IFNULL((SELECT c.countryCode from country c WHERE c.countryId = a.countryId),a.country) as 'address.countryCode',\
  IFNULL((SELECT c.countryName from country c WHERE c.countryId = a.countryId),a.country) as 'address.country', ac.name AS award,\
  cd.generalPhoneNumber,cd.generalUrl,\
  ci.coverImageUrl,cd.scholarship,\
  (select attachment.url from attachments attachment where attachment.collegeDetailsId=cd.collegeDetailsId limit 1 offset 0) as profileImageUrl, \
  a.longitude as 'longitude',a.latitude as latitude,cd.description as 'description',cd.duration as 'duration',cd.intake as 'intake', \
  (SELECT userId from college_admin_user where collegeDetailsId=:collegeDetailsId) as collegeAdminUserId,cd.application_fees as 'applicationFees',\
  cd.tutionFeePerYear,cd.costOfLivingPerYear \
  FROM college_details cd \
  LEFT JOIN address a ON a.addressId = cd.addressId \
  LEFT JOIN unitid_award_category uac ON cd.UNITID = uac.UNITID \
  LEFT JOIN award_category ac ON ac.awardCategoryId = uac.awardCategoryId \
  LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
  LEFT JOIN college_yearly_cost cyc on cyc.collegeDetailsId = cd.collegeDetailsID and cyc.statusId=1 \
  LEFT JOIN college_locale cl on cl.collegeLocaleId = cd.collegeLocaleId \
  LEFT JOIN college_head_count chc on chc.collegeDetailsId = cd.collegeDetailsID \
  and chc.level = 1 \
  LEFT JOIN college_grad_rate cgr on cgr.collegeDetailsId = cd.collegeDetailsID \
  WHERE cd.collegeDetailsId=:collegeDetailsId

update.college.address.qry=update address set stateId=:stateId,countryId=:countryId,streetName=:streetName,zip=:zip where addressId = (select addressId from college_details where collegeDetailsId=:collegeDetailsId)

update.college.details.qry = update college_details set scholarship=:scholarship,description=:description,intake=:intake, \
  application_fees=:applicationFees,tutionFeePerYear=:tutionFeePerYear,costOfLivingPerYear=:costOfLivingPerYear where collegeDetailsId=:collegeDetailsId

insert.college.details.new=insert into college_details(collegeName, generalPhoneNumber, statusId, UNITID,generalUrl,facebookUrl, instagramUrl, linkedinUrl, twitterUrl) values (:collegeName,:phoneNumber,:statusId,:unitId,:generalUrl,:facebookUrl, :instagramUrl, :linkedinUrl, :twitterUrl)

get.college.details.for.university.by.user.qry=SELECT cd.collegeDetailsId, cd.unitId, cd.collegeName,cd.statusID,a.addressID as 'address.addressId',a.streetName as 'address.streetName',a.city as 'address.city',\
  IFNULL((SELECT s.stateId from state s WHERE s.stateId = a.stateId),a.state) AS 'address.stateId',\
  IFNULL((SELECT s.stateCode from state s WHERE s.stateId = a.stateId),a.state) AS 'address.stateCode',\
  IFNULL((SELECT s.stateName from state s WHERE s.stateId = a.stateId),a.state) AS 'address.state', a.zip as 'address.zip',\
  IFNULL((SELECT c.countryID from country c WHERE c.countryId = a.countryId),a.country) as 'address.countryId',\
  IFNULL((SELECT c.countryCode from country c WHERE c.countryId = a.countryId),a.country) as 'address.countryCode',\
  IFNULL((SELECT c.countryName from country c WHERE c.countryId = a.countryId),a.country) as 'address.country', ac.name AS award,\
  cd.generalPhoneNumber,cd.generalUrl,\
  ci.coverImageUrl,cd.scholarship,\
  (select attachment.url from attachments attachment where attachment.collegeDetailsId=cd.collegeDetailsId limit 1 offset 0) as profileImageUrl, \
  a.longitude as 'longitude',a.latitude as latitude,cd.description as 'description',cd.duration as 'duration',cd.intake as 'intake', \
  (SELECT userId from college_admin_user where collegeDetailsId=cd.collegeDetailsId) as collegeAdminUserId,cd.application_fees as 'applicationFees',\
  cd.tutionFeePerYear,cd.costOfLivingPerYear \
  FROM college_details cd \
  Join college_admin_user cau on cau.collegeDetailsId=cd.collegeDetailsId \
  LEFT JOIN address a ON a.addressId = cd.addressId \
  LEFT JOIN unitid_award_category uac ON cd.UNITID = uac.UNITID \
  LEFT JOIN award_category ac ON ac.awardCategoryId = uac.awardCategoryId \
  LEFT JOIN cover_image ci on ci.entityID = cd.collegeDetailsID AND ci.isCurrent=1 \
  LEFT JOIN college_yearly_cost cyc on cyc.collegeDetailsId = cd.collegeDetailsID and cyc.statusId=1 \
  LEFT JOIN college_locale cl on cl.collegeLocaleId = cd.collegeLocaleId \
  LEFT JOIN college_head_count chc on chc.collegeDetailsId = cd.collegeDetailsID \
  and chc.level = 1 \
  LEFT JOIN college_grad_rate cgr on cgr.collegeDetailsId = cd.collegeDetailsID \
  WHERE cau.userId=:userId and cau.statusID=4